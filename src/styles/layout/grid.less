
@import "../core/mixins.less";

@padding:       10px;   // 容器之间

.generateColumnStep(@classPrefix, @index, @count) when (@index =< @count) {
    .x-col@{classPrefix}-@{index} {
        width: 100% * @index / @count;
    }
    .generateColumnStep(@classPrefix, (@index + 1), @count);
}

.generateColumns(@classPrefix: ~'') {
    .x-col@{classPrefix}-0 {
        display: none;
    }
    .generateColumnStep(@classPrefix, 1, 12);
}

// 布局行
.x-grid {
    margin: 0 -@padding;
    .clearfix();
}

// 容器
.x-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 @padding * 2;
    position: relative;
}

// 当容器和布局行一起使用时，不需要设置 margin
.x-container.x-grid {
    padding: 0 10px;
}

// 列
.x-col {
    float: left;
    padding: 0 @padding;
    margin-bottom: @padding;
    box-sizing: border-box;
}

.generateColumns();

@media @mediumUp {

    // 恢复默认显示
    .x-col-0 {
        display: block;
    }

    .generateColumns(-medium);
}

@media @largeUp {

    // 恢复默认显示
    .x-col-medium-0 {
        display: block;
    }

    .generateColumns(-large);
}
